/***********
  Originally based on The MailChimp Reset from Fabio Carneiro, MailChimp User Experience Design
  More info and templates on Github: https://github.com/mailchimp/Email-Blueprints
  http://www.mailchimp.com &amp; http://www.fabio-carneiro.com
  INLINE: No.
  ***********/
      /* Client-specific Styles */
      #outlook a {
        padding: 0;
      } /* Force Outlook to provide a "view in browser" menu link. */
      body {
        width: 100% !important;
        -webkit-text-size-adjust: 100%;
        -ms-text-size-adjust: 100%;
        margin: 0;
        padding: 0;
      }
      /* Prevent Webkit and Windows Mobile platforms from changing default font sizes, while not breaking desktop design. */
      .ExternalClass {
        width: 100%;
      } /* Force Hotmail to display emails at full width */
      .ExternalClass,
      .ExternalClass p,
      .ExternalClass span,
      .ExternalClass font,
      .ExternalClass td,
      .ExternalClass div {
        line-height: 100%;
      } /* Force Hotmail to display normal line spacing.  More on that: http://www.emailonacid.com/forum/viewthread/43/ */
      #backgroundTable {
        margin: 0;
        padding: 0;
        width: 100% !important;
        line-height: 100% !important;
      }
      /* End reset */





      /** Outlook 07, 10 Padding issue: These "newer" versions of Outlook add some padding around table cells potentially throwing off your perfectly pixeled table.  The issue can cause added space and also throw off borders completely.  Use this fix in your header or inline to safely fix your table woes.
  More info: http://www.ianhoar.com/2008/04/29/outlook-2007-borders-and-1px-padding-on-table-cells/
  http://www.campaignmonitor.com/blog/post/3392/1px-borders-padding-on-table-cells-in-outlook-07/
  H/T @edmelly
  Bring inline: No.
  **/
      table td {
        border-collapse: collapse;
      }


      /***************************************************
  ****************************************************
  MOBILE TARGETING
  Use @media queries with care.  You should not bring these styles inline -- so it's recommended to apply them AFTER you bring the other stlying inline.
  Note: test carefully with Yahoo.
  Note 2: Don't bring anything below this line inline.
  ****************************************************
  ***************************************************/
      /* NOTE: To properly use @media queries and play nice with yahoo mail, use attribute selectors in place of class, id declarations.
  table[class=classname]
  Read more: http://www.campaignmonitor.com/blog/post/3457/media-query-issues-in-yahoo-mail-mobile-email/
  */
      @media only screen and (max-device-width: 480px) {
        /* A nice and clean way to target phone numbers you want clickable and avoid a mobile phone from linking other numbers that look like, but are not phone numbers.  Use these two blocks of code to "unstyle" any numbers that may be linked.  The second block gives you a class to apply with a span tag to the numbers you would like linked and styled.
    Inspired by Campaign Monitor's article on using phone numbers in email: http://www.campaignmonitor.com/blog/post/3571/using-phone-numbers-in-html-email/.
    Step 1 (Step 2: line 224)
    */
        a[href^='tel'],
        a[href^='sms'] {
          text-decoration: none;
          color: black; /* or whatever your want */
          pointer-events: none;
          cursor: default;
        }
        .mobile_link a[href^='tel'],
        .mobile_link a[href^='sms'] {
          text-decoration: default;
          color: orange !important; /* or whatever your want */
          pointer-events: auto;
          cursor: default;
        }
      }
      /* More Specific Targeting */
      @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {
        /* You guessed it, ipad (tablets, smaller screens, etc) */
        /* Step 1a: Repeating for the iPad */
        a[href^='tel'],
        a[href^='sms'] {
          text-decoration: none;
          color: blue; /* or whatever your want */
          pointer-events: none;
          cursor: default;
        }
        .mobile_link a[href^='tel'],
        .mobile_link a[href^='sms'] {
          text-decoration: default;
          color: orange !important;
          pointer-events: auto;
          cursor: default;
        }
      }
      @media only screen and (-webkit-min-device-pixel-ratio: 2) {
        /* Put your iPhone 4g styles in here */
      }
      /* Following Android targeting from:
  http://developer.android.com/guide/webapps/targeting.html
  http://pugetworks.com/2011/04/css-media-queries-for-targeting-different-mobile-devices/  */
      @media only screen and (-webkit-device-pixel-ratio: 0.75) {
        /* Put CSS for low density (ldpi) Android layouts in here */
      }
      @media only screen and (-webkit-device-pixel-ratio: 1) {
        /* Put CSS for medium density (mdpi) Android layouts in here */
      }
      @media only screen and (-webkit-device-pixel-ratio: 1.5) {
        /* Put CSS for high density (hdpi) Android layouts in here */
      }
      /* end Android targeting */
    

    <!-- Targeting Windows Mobile -->
    <!--[if IEMobile 7]>
      <style type="text/css"></style>
    <![endif]-->

    <!-- ***********************************************
****************************************************
END MOBILE TARGETING
****************************************************
************************************************ -->

    <!--[if gte mso 9]>
    <style>
      <style type="text/css">
    table {
      border-collapse: collapse;
      border-spacing: 0;
      margin: 0;
    }
    div,
    td {
      padding: 0;
    }
    div {
      margin: 0 !important;
    }

    
  </style>

  <noscript>
    <xml>
      <o:OfficeDocumentSettings>
        <o:AllowPNG/>
        <o:PixelsPerInch>96</o:PixelsPerInch>
      </o:OfficeDocumentSettings>
    </xml>
  </noscript>
    </style>
  <![endif]-->